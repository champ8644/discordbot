import { TapoDevice, TapoDeviceKey, TapoDeviceInfo } from "./types";
export { TapoDevice, TapoDeviceKey, TapoDeviceInfo };
export declare const cloudLogin: (email?: string, password?: string) => Promise<string>;
export declare const listDevices: (cloudToken: string) => Promise<Array<TapoDevice>>;
export declare const listDevicesByType: (cloudToken: string, deviceType: string) => Promise<Array<TapoDevice>>;
export declare const handshake: (deviceIp: string) => Promise<TapoDeviceKey>;
export declare const loginDevice: (email: string, password: string, device: TapoDevice) => Promise<TapoDeviceKey>;
export declare const loginDeviceByIp: (email: string, password: string, deviceIp: string) => Promise<TapoDeviceKey>;
export declare const turnOn: (deviceKey: TapoDeviceKey, deviceOn?: boolean) => Promise<void>;
export declare const turnOff: (deviceKey: TapoDeviceKey) => Promise<void>;
export declare const setBrightness: (deviceKey: TapoDeviceKey, brightnessLevel?: number) => Promise<void>;
export declare const setColour: (deviceKey: TapoDeviceKey, colour?: string) => Promise<void>;
export declare const getDeviceInfo: (handshakeResponse: TapoDeviceKey) => Promise<TapoDeviceInfo>;
export declare const securePassthrough: (deviceRequest: any, deviceKey: TapoDeviceKey) => Promise<any>;
export declare const isTapoDevice: (deviceType: string) => boolean;
